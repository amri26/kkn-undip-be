generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  MAHASISWA
  DOSEN
  BAPPEDA
  REVIEWER
  PIMPINAN
}

model tema {
  id_tema      Int            @id @default(autoincrement())
  nama         String         @db.VarChar(50)
  periode      String         @db.VarChar(50)
  jenis        Int            @db.TinyInt
  kab          String?        @db.VarChar(50)
  kec          String?        @db.VarChar(50)
  desa         String?        @db.VarChar(50)
  status       Boolean        @default(false)
  tgl_mulai    DateTime?      @db.Timestamp(0)
  tgl_akhir    DateTime?      @db.Timestamp(0)
  kabupaten    kabupaten[]
  tema_halaman tema_halaman[]
  presensi     presensi[]
}

model halaman {
  id_halaman   Int            @id @default(autoincrement())
  nama         String         @db.VarChar(50)
  tema_halaman tema_halaman[]
}

model tema_halaman {
  id_tema_halaman Int         @id @default(autoincrement())
  id_tema         Int
  id_halaman      Int
  tgl_mulai       DateTime?   @db.Timestamp(0)
  tgl_akhir       DateTime?   @db.Timestamp(0)
  status          Boolean     @default(false)
  isStatusEdited  Boolean     @default(false)
  tema            tema        @relation(fields: [id_tema], references: [id_tema], onDelete: Cascade, onUpdate: Cascade)
  halaman         halaman     @relation(fields: [id_halaman], references: [id_halaman], onDelete: Cascade, onUpdate: Cascade)
  gelombang       gelombang[]
}

model gelombang {
  id_gelombang        Int                   @id @default(autoincrement())
  id_tema_halaman     Int?
  nama                String                @db.VarChar(50)
  tgl_mulai           DateTime?             @db.Timestamp(0)
  tgl_akhir           DateTime?             @db.Timestamp(0)
  status              Boolean               @default(false)
  isStatusEdited      Boolean               @default(false)
  tema_halaman        tema_halaman?         @relation(fields: [id_tema_halaman], references: [id_tema_halaman], onDelete: Cascade, onUpdate: Cascade)
  proposal            proposal[]
  mahasiswa_kecamatan mahasiswa_kecamatan[]
}

model fakultas {
  id_fakultas Int     @id @default(autoincrement())
  nama        String  @db.VarChar(50)
  singkatan   String? @db.VarChar(10)
  prodi       prodi[]
}

model prodi {
  id_prodi    Int         @id @default(autoincrement())
  id_fakultas Int
  nama        String      @db.VarChar(50)
  fakultas    fakultas    @relation(fields: [id_fakultas], references: [id_fakultas], onDelete: Cascade, onUpdate: Cascade)
  mahasiswa   mahasiswa[]
}

model dokumen {
  id_dokumen Int        @id @default(autoincrement())
  id_drive   String     @db.VarChar(100)
  created_at DateTime   @default(now()) @db.DateTime(0)
  proposal   proposal[]
}

model kabupaten {
  id_kabupaten Int         @id @default(autoincrement())
  id_tema      Int
  id_bappeda   Int?
  nama         String      @db.VarChar(50)
  tema         tema        @relation(fields: [id_tema], references: [id_tema], onDelete: Cascade, onUpdate: Cascade)
  bappeda      bappeda?    @relation(fields: [id_bappeda], references: [id_bappeda], onDelete: Cascade, onUpdate: Cascade)
  kecamatan    kecamatan[]
}

model kecamatan {
  id_kecamatan               Int                          @id @default(autoincrement())
  id_kabupaten               Int
  id_korwil                  Int?
  nama                       String                       @db.VarChar(50)
  potensi                    String                       @db.Text
  status                     Int                          @default(0) @db.TinyInt
  is_full                    Boolean                      @default(false)
  longitude                  Float?                       @db.Float()
  latitude                   Float?                       @db.Float()
  radius                     Float?                       @db.Float()
  kabupaten                  kabupaten                    @relation(fields: [id_kabupaten], references: [id_kabupaten], onDelete: Cascade, onUpdate: Cascade)
  korwil                     korwil?                      @relation(fields: [id_korwil], references: [id_korwil], onDelete: Cascade, onUpdate: Cascade)
  desa                       desa[]
  proposal                   proposal[]
  mahasiswa_kecamatan        mahasiswa_kecamatan[]
  mahasiswa_kecamatan_active mahasiswa_kecamatan_active[]
}

model desa {
  id_desa      Int       @id @default(autoincrement())
  id_kecamatan Int
  nama         String    @db.VarChar(50)
  kecamatan    kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan], onDelete: Cascade, onUpdate: Cascade)
}

model proposal {
  id_proposal  Int       @id @default(autoincrement())
  id_kecamatan Int
  id_dosen     Int
  id_gelombang Int
  id_dokumen   Int
  komentar     String?   @db.Text
  rekomendasi  Boolean?
  status       Int       @default(0) @db.TinyInt
  created_at   DateTime  @default(now()) @db.DateTime(0)
  kecamatan    kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan], onDelete: Cascade, onUpdate: Cascade)
  dosen        dosen     @relation(fields: [id_dosen], references: [id_dosen], onDelete: Cascade, onUpdate: Cascade)
  gelombang    gelombang @relation(fields: [id_gelombang], references: [id_gelombang], onDelete: Cascade, onUpdate: Cascade)
  dokumen      dokumen   @relation(fields: [id_dokumen], references: [id_dokumen], onDelete: Cascade, onUpdate: Cascade)
}

model mahasiswa_kecamatan {
  id_mahasiswa_kecamatan Int       @id @default(autoincrement())
  id_mahasiswa           Int
  id_kecamatan           Int
  id_gelombang           Int
  status                 Int       @default(0) @db.TinyInt
  created_at             DateTime  @default(now()) @db.DateTime(0)
  mahasiswa              mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
  kecamatan              kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan], onDelete: Cascade, onUpdate: Cascade)
  gelombang              gelombang @relation(fields: [id_gelombang], references: [id_gelombang], onDelete: Cascade, onUpdate: Cascade)
}

model mahasiswa_kecamatan_active {
  id_mahasiswa_kecamatan_active Int       @id @default(autoincrement())
  id_mahasiswa                  Int       @unique
  id_kecamatan                  Int
  mahasiswa                     mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
  kecamatan                     kecamatan @relation(fields: [id_kecamatan], references: [id_kecamatan], onDelete: Cascade, onUpdate: Cascade)
}

model user {
  id_user    Int        @id @default(autoincrement())
  username   String     @unique @db.VarChar(50)
  password   String     @db.VarChar(100)
  role       Role
  created_at DateTime   @default(now()) @db.DateTime(0)
  mahasiswa  mahasiswa?
  bappeda    bappeda?
  admin      admin?
  dosen      dosen?
  reviewer   reviewer?
  pimpinan   pimpinan?
}

model admin {
  id_admin      Int       @id @default(autoincrement())
  id_user       Int?      @unique
  nama          String    @db.VarChar(50)
  nip           String    @unique @db.VarChar(50)
  jenis_kelamin Int?      @db.TinyInt
  ttl           DateTime? @db.Date()
  no_hp         String?   @db.VarChar(50)
  alamat        String?   @db.VarChar(100)
  foto_profile  String?   @db.VarChar(100)
  created_at    DateTime  @default(now()) @db.DateTime(0)
  user          user?     @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
}

model bappeda {
  id_bappeda     Int         @id @default(autoincrement())
  id_user        Int?        @unique
  nama           String      @db.VarChar(50)
  nb             String      @unique @db.VarChar(50)
  no_hp          String?     @db.VarChar(50)
  alamat         String?     @db.VarChar(100)
  nama_kabupaten String      @db.VarChar(50)
  nama_pj        String      @db.VarChar(50)
  foto_profile   String?     @db.VarChar(100)
  created_by     String      @db.VarChar(50)
  created_at     DateTime    @default(now()) @db.DateTime(0)
  user           user?       @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
  kabupaten      kabupaten[]
}

model korwil {
  id_korwil     Int         @id @default(autoincrement())
  nama          String      @db.VarChar(50)
  nk            String      @unique @db.VarChar(50)
  jenis_kelamin Int?        @db.TinyInt
  ttl           DateTime?   @db.Date()
  no_hp         String?     @db.VarChar(50)
  alamat        String?     @db.VarChar(100)
  created_at    DateTime    @default(now()) @db.DateTime(0)
  kecamatan     kecamatan[]
}

model reviewer {
  id_reviewer   Int       @id @default(autoincrement())
  id_user       Int?      @unique
  nama          String    @db.VarChar(50)
  nip           String    @unique @db.VarChar(50)
  jenis_kelamin Int?      @db.TinyInt
  ttl           DateTime? @db.Date()
  no_hp         String?   @db.VarChar(50)
  alamat        String?   @db.VarChar(100)
  foto_profile  String?   @db.VarChar(100)
  created_at    DateTime  @default(now()) @db.DateTime(0)
  user          user?     @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
}

model pimpinan {
  id_pimpinan   Int       @id @default(autoincrement())
  id_user       Int?      @unique
  nama          String    @db.VarChar(50)
  nip           String    @unique @db.VarChar(50)
  jenis_kelamin Int?      @db.TinyInt
  ttl           DateTime? @db.Date()
  no_hp         String?   @db.VarChar(50)
  alamat        String?   @db.VarChar(100)
  foto_profile  String?   @db.VarChar(100)
  created_at    DateTime  @default(now()) @db.DateTime(0)
  user          user?     @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
}

model dosen {
  id_dosen      Int        @id @default(autoincrement())
  id_user       Int?       @unique
  nama          String     @db.VarChar(50)
  nip           String     @unique @db.VarChar(50)
  jenis_kelamin Int?       @db.TinyInt
  ttl           DateTime?  @db.Date()
  no_hp         String?    @db.VarChar(50)
  alamat        String?    @db.VarChar(100)
  foto_profile  String?    @db.VarChar(100)
  created_at    DateTime   @default(now()) @db.DateTime(0)
  user          user?      @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
  proposal      proposal[]
}

model mahasiswa {
  id_mahasiswa               Int                         @id @default(autoincrement())
  id_user                    Int?                        @unique
  id_prodi                   Int?
  nama                       String                      @db.VarChar(50)
  nim                        String                      @unique @db.VarChar(50)
  jenis_kelamin              Int?                        @db.TinyInt
  ttl                        DateTime?                   @db.Date()
  no_hp                      String?                     @db.VarChar(50)
  alamat                     String?                     @db.VarChar(100)
  riwayat_penyakit           String?                     @db.VarChar(50)
  nama_ortu                  String?                     @db.VarChar(50)
  no_hp_ortu                 String?                     @db.VarChar(50)
  alamat_ortu                String?                     @db.VarChar(100)
  nama_cp_urgent             String?                     @db.VarChar(50)
  no_hp_cp_urgent            String?                     @db.VarChar(50)
  alamat_cp_urgent           String?                     @db.VarChar(100)
  foto_profile               String?                     @db.VarChar(100)
  hubungan                   String?                     @db.VarChar(50)
  khs                        String?                     @db.VarChar(100)
  surat_pernyataan           String?                     @db.VarChar(100)
  status                     Int                         @default(0) @db.TinyInt
  created_at                 DateTime                    @default(now()) @db.DateTime(0)
  user                       user?                       @relation(fields: [id_user], references: [id_user], onDelete: SetNull, onUpdate: Cascade)
  prodi                      prodi?                      @relation(fields: [id_prodi], references: [id_prodi], onDelete: SetNull, onUpdate: Cascade)
  mahasiswa_kecamatan        mahasiswa_kecamatan[]
  mahasiswa_kecamatan_active mahasiswa_kecamatan_active?
  nilai                      nilai?
  laporan                    laporan[]
  reportase                  reportase[]
  riwayat_presensi           riwayat_presensi[]
}

model nilai {
  id_nilai              Int       @id @default(autoincrement())
  id_mahasiswa          Int       @unique
  pembekalan            Int?      @db.UnsignedTinyInt
  upacara               Int?      @db.UnsignedTinyInt
  kehadiran_dilokasi    Int?      @db.UnsignedTinyInt
  lrk                   Int?      @db.UnsignedTinyInt
  integritas            Int?      @db.UnsignedTinyInt
  sosial_kemasyarakatan Int?      @db.UnsignedTinyInt
  lpk                   Int?      @db.UnsignedTinyInt
  ujian_akhir           Int?      @db.UnsignedTinyInt
  tugas                 Int?      @db.UnsignedTinyInt
  uts                   Int?      @db.UnsignedTinyInt
  uas                   Int?      @db.UnsignedTinyInt
  nilai_akhir           Float?    @db.Float()
  nilai_huruf           String?   @db.Char(1)
  mahasiswa             mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
}

model laporan {
  id_laporan   Int       @id @default(autoincrement())
  id_mahasiswa Int
  kategori     Int       @db.TinyInt
  potensi      String    @db.Text
  program      String    @db.Text
  sasaran      String    @db.Text
  metode       String    @db.Text
  luaran       String    @db.Text
  pelaksanaan  String?   @db.Text
  capaian      String?   @db.Text
  hambatan     String?   @db.Text
  kelanjutan   String?   @db.Text
  komentar     String?   @db.Text
  dokumentasi  String?   @db.Text
  created_at   DateTime  @default(now()) @db.DateTime(0)
  mahasiswa    mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
}

model reportase {
  id_reportase   Int       @id @default(autoincrement())
  id_mahasiswa   Int
  kategori       Int       @db.TinyInt
  judul          String    @db.VarChar(100)
  isi            String    @db.Text
  link_publikasi String?   @db.Text
  komentar       String?   @db.Text
  created_at     DateTime  @default(now()) @db.DateTime(0)
  mahasiswa      mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
}

model pengumuman {
  id_pengumuman Int      @id @default(autoincrement())
  judul         String   @db.VarChar(200)
  isi           String   @db.Text
  peruntukan    String   @db.VarChar(100)
  created_at    DateTime @default(now()) @db.DateTime(0)
}

model event {
  id_event   Int      @id @default(autoincrement())
  judul      String   @db.VarChar(200)
  keterangan String?  @default("") @db.Text
  tgl_mulai  DateTime @db.DateTime(0)
  tgl_akhir  DateTime @db.DateTime(0)
  tempat     String   @db.VarChar(100)
  peruntukan String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.DateTime(0)
}

model presensi {
  id_presensi      Int                @id @default(autoincrement())
  id_tema          Int
  tgl              DateTime           @unique @db.Date()
  status           Int                @default(0) @db.TinyInt
  tema             tema               @relation(fields: [id_tema], references: [id_tema], onDelete: Cascade, onUpdate: Cascade)
  riwayat_presensi riwayat_presensi[]
}

model riwayat_presensi {
  id_riwayat_presensi Int       @id @default(autoincrement())
  id_presensi         Int
  id_mahasiswa        Int
  status              Int       @default(0) @db.TinyInt
  updated_at          DateTime  @default(now()) @db.DateTime(0)
  presensi            presensi  @relation(fields: [id_presensi], references: [id_presensi], onDelete: Cascade, onUpdate: Cascade)
  mahasiswa           mahasiswa @relation(fields: [id_mahasiswa], references: [id_mahasiswa], onDelete: Cascade, onUpdate: Cascade)
}
