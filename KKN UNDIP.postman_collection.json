{
	"info": {
		"_postman_id": "6b5d5f4a-60a4-4dc1-8e6e-ab9a8c614c59",
		"name": "KKN UNDIP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18808497"
	},
	"item": [
		{
			"name": "AUTH",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET USER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\",\r\n    \"riwayat_penyakit\": \"Tidak ada\",\r\n    \"nama_ortu\": \"Rudiger\",\r\n    \"no_hp_ortu\": \"09832565\",\r\n    \"alamat_ortu\": \"Jalan Kenanga\",\r\n    \"nama_cp_urgent\": \"Ibu Kos\",\r\n    \"no_hp_cp_urgent\": \"93797324\",\r\n    \"alamat_cp_urgent\": \"Jalan Banyubiru\",\r\n    \"hubungan\": \"Ibu kos\",\r\n    \"nama_kabupaten\": \"Kab. Merangin\",\r\n    \"nama_pj\": \"PJ Merangin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\",\r\n    \"nama_kabupaten\": \"Kab. Merangin\",\r\n    \"nama_pj\": \"PJ Merangin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SUPERADMIN",
			"item": [
				{
					"name": "ADD ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"admin a\",\r\n    \"nip\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/superadmin/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"superadmin",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Admin B\",\r\n    \"nip\": \"admin bc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/superadmin/admin/:id_admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"superadmin",
								"admin",
								":id_admin"
							],
							"variable": [
								{
									"key": "id_admin",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "LIST ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/:id_admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								":id_admin"
							],
							"variable": [
								{
									"key": "id_admin",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim I 2023\",\r\n    \"periode\": \"2022/2023\",\r\n    \"jenis\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim I 2023\",\r\n    \"periode\": \"2022/2023\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/tema/edit/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema",
								"edit",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Daftar Proposal Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-22T15:06:00.000Z\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/halaman/edit/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								"edit",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GELOMBANG",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/detail/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								"detail",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 1,\r\n    \"nama\": \"Gelombang 1 Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 2,\r\n    \"nama\": \"Gelombang 2 Mahasiswa\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"status\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang/edit/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								"edit",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"keterangan\": \"\",\r\n    \"tgl_mulai\": \"2023-07-23T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-07-23T15:06:00.000Z\",\r\n    \"tempat\": \"Stadion Undip\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/event",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN Tim 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-07-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-07-21T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/event/:id_event",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"event",
								":id_event"
							],
							"variable": [
								{
									"key": "id_event",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN TIm 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/event/:id_event",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"event",
								":id_event"
							],
							"variable": [
								{
									"key": "id_event",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"isi\": \"Upcara dilaksanakan pada bulan juli\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pengumuman"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"isi\": \"Upcara dilaksanakan pada bulan Juli dan Agustus\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/pengumuman/:id_pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pengumuman",
								":id_pengumuman"
							],
							"variable": [
								{
									"key": "id_pengumuman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN TIm 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/pengumuman/:id_pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pengumuman",
								":id_pengumuman"
							],
							"variable": [
								{
									"key": "id_pengumuman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Mhs A\",\r\n    \"nim\": \"mhs a\",\r\n    \"prodi\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Wahyu Purnomo Ady\",\r\n    \"nim\": \"240602\",\r\n    \"prodi\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/mahasiswa/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Dosen C\",\r\n    \"nip\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/dosen/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"dosen a\",\r\n    \"nip\": \"1221\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/dosen/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/dosen/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\" : \"Bpd Boyolali\",\r\n    \"nb\" : \"bpd boyolali\",\r\n    \"nama_kabupaten\": \"Boyolali\",\r\n    \"nama_pj\": \"Admin A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/bappeda/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"BAPPEDA Semarang\",\r\n    \"nb\": \"090909\",\r\n    \"nama_kabupaten\": \"Kab. Semarang\",\r\n    \"nama_pj\": \"Bupati Semarang\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/bappeda/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/bappeda/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil C\",\r\n    \"nk\": \"korwil c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/korwil/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil a\",\r\n    \"nk\": \"909012\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/korwil/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/korwil/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "11"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer C\",\r\n    \"nip\": \"reviewer c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/reviewer/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer A\",\r\n    \"nip\": \"1331\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/reviewer/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/reviewer/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/Format Import Pimpinan - KKN UNDIP.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pimpinan"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PIMIPINAN SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pimpinan A\",\r\n    \"nip\": \"pimpinan a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/pimpinan/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pimpinan",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pimpinan AC\",\r\n    \"nip\": \"7879\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/pimpinan/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pimpinan",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/pimpinan/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"pimpinan",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/kecamatan/dec/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"dec",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/dec/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"dec",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BAPPEDA",
			"item": [
				{
					"name": "LIST BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kabupaten"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Gandrungmangu\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Gandrungmanis\"\r\n        },\r\n        {\r\n            \"nama\": \"Sidaurip\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DOSEN",
			"item": [
				{
					"name": "LIST DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST DOSEN WILAYAH",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST ALL PROPOSAL DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/proposal/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PROPOSAL DOSEN TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/proposal/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/dec/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"dec",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE LAPORAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_laporan\": 1,\r\n    \"komentar\": \"Sudah bagus, mantul bener\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dosen/laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"laporan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/reportase/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"reportase",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_reportase\": 1,\r\n    \"komentar\": \"Kurang mantul apa yah\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dosen/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT NILAI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_nilai\": 1,\r\n    \"pembekalan\": 70,\r\n    \"upacara\": 70,\r\n    \"kehadiran_dilokasi\": 70,\r\n    \"lrk\": 70,\r\n    \"integritas\": 70,\r\n    \"sosial_kemasyarakatan\": 70,\r\n    \"lpk\": 70,\r\n    \"ujian_akhir\": 70,\r\n    \"tugas\": 70,\r\n    \"uts\": 70,\r\n    \"uas\": 70,\r\n    \"nilai_akhir\": 70,\r\n    \"nilai_huruf\": \"B\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dosen/nilai",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"nilai"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MAHASISWA",
			"item": [
				{
					"name": "LIST MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA UNREGISTERED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/unregistered",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"unregistered"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA REGISTERED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/registered",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"registered"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA ACCEPTED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/accepted",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"accepted"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA REGISTERED BY KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/registered/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"registered",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA ACCEPTED BY KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/accepted/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"accepted",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/detail/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"detail",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 1,\r\n    \"id_gelombang\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PENDAFTARAN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LRK MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/lrk",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"lrk"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD LRK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"potensi\": \"Di Desa Tlogoharjo ada banyak pelaku UMKM. Namun, informasi terkait data UMKM Desa Tlogoharjo masih sangat susah dicari. Oleh karena itu diperlukan suatu media yang mudah diakses, yaitu website untuk menampung informasi terkait UMKM Desa Tlogoharjo. Dengan adanya website ini, diharapkan nantinya dapat meningkatkan taraf hidup masyarakat.\",\r\n    \"program\": \"Pengembangan Website E-Katalog UMKM Desa Tlogoharjo\",\r\n    \"sasaran\": \"Seluruh masyarakat Desa Tlogoharjo\",\r\n    \"metode\": \"Pertama adalah proses pembuatan website e-katalog. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"luaran\": \"1. Leaflet\\r\\n2. Modul PPT\\r\\n3. Reportase Media Berita (Elektronik)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/lrk",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"lrk"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT LRK",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_laporan\": 5,\r\n    \"potensi\": \"Di Desa Tlogoharjo ada banyak pelaku UMKM. Namun, informasi terkait data UMKM Desa Tlogoharjo masih sangat susah dicari. Oleh karena itu diperlukan suatu media yang mudah diakses, yaitu website untuk menampung informasi terkait UMKM Desa Tlogoharjo. Dengan adanya website ini, diharapkan nantinya dapat meningkatkan taraf hidup masyarakat.\",\r\n    \"program\": \"Pengembangan Website E-Katalog UMKM Desa Tlogoharjo\",\r\n    \"sasaran\": \"Seluruh masyarakat Desa Tlogoharjo\",\r\n    \"metode\": \"Pertama adalah proses pembuatan website e-katalog. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"luaran\": \"1. Leaflet\\r\\n2. Modul PPT\\r\\n3. Reportase Media Berita (Elektronik)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/lrk/edit",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"lrk",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LPK MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/lpk",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"lpk"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD LPK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_laporan\": 1,\r\n    \"metode\": \"Langkah awal untuk mengembangkan website ini adalah proses Design Thinking. Semua fungsionalitas aplikasi didata dan dibuatkan diagram untuk membantu memudahkan proses kedepannya. Kemudian setelah didapatkan desain sistem yang diinginkan, selanjutnya adalah proses pengembangan aplikasi sampai jadi. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"pelaksanaan\": \"Program ini dilaksanakan pada: Hari/Tanggal : 14 Januari – 6 Februari 2023 Waktu : 08.00 – 20.00 Program “Pengembangan Website E-Katalog UMKM Desa Tlogoharjo” merupakan program kerja bertema teknologi berwujud pembuatan website untuk pendataan UMKM penduduk Desa Tlogoharjo. Dengan aplikasi ini, dapat mempermudah masyarakat untuk mengetahui ada UMKM apa saja di Desa Tlogoharjo. Keberhasilan dari program ini dapat dilihat dari kemudahan Operator Desa menggunakan website ini. Semua fitur utama dalam website ini dapat dicoba dan mendapatkan feedback yang sesuai. Output yang direncanakan adalah • Publikasi Rutin Media Sosial • Prototype produk • Reportase Media Berita\",\r\n    \"capaian\": \"Tercapai dengan tepat waktu, website sudah mempunyai fitur yang dibutuhkan namun masih belum bisa digunakan karena belum di hosting\",\r\n    \"hambatan\": \"- Pembuatan aplikasi membutuhkan waktu yang cukup - Untuk menghosting website juga membutuhkan biaya\",\r\n    \"kelanjutan\": \"Keberlanjutan program Pengembangan Website E-Katalog UMKM Desa Tlogoharjo ini dapat dilakukan oleh operator Desa Progowati yang nantinya diberi amanah untuk mengelola website E-Katalog UMKM Desa Tlogoharjo tersebut.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/lpk",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"lpk"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"judul\": \"Judul Reportase\",\r\n    \"isi\": \"Isi berita\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"judul\": \"Kebudayaan Petani dan Peternak Desa ABCD\",\r\n    \"isi\": \"Isi Desa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/reportase/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"reportase",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KECAMATAN MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"kecamatan"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REVIEWER",
			"item": [
				{
					"name": "LIST REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reviewer/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 1,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIMPINAN",
			"item": [
				{
					"name": "LIST PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pimpinan/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WILAYAH",
			"item": [
				{
					"name": "LIST WILAYAH",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/wilayah/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"wilayah",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MY WILAYAH",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/wilayah/:id_tema/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"wilayah",
								":id_tema",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_bappeda",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DOKUMEN",
			"item": [
				{
					"name": "GET DOKUMEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dokumen/:id_dokumen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dokumen",
								":id_dokumen"
							],
							"variable": [
								{
									"key": "id_dokumen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET EMBED LINK DOKUMEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dokumen/embed/:id_dokumen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dokumen",
								"embed",
								":id_dokumen"
							],
							"variable": [
								{
									"key": "id_dokumen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PROPOSAL",
			"item": [
				{
					"name": "LIST PROPOSAL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PROPOSAL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/detail/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"detail",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TEMA",
			"item": [
				{
					"name": "LIST TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST TEMA DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								"dosen"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HALAMAN",
			"item": [
				{
					"name": "CEK HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/:id_tema/:id_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema",
								":id_halaman"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GELOMBANG",
			"item": [
				{
					"name": "LIST GELOMBANG",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/:id_tema/:id_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								":id_tema",
								":id_halaman"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/dosen/:id_tema/:id_halaman/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"dosen",
								":id_tema",
								":id_halaman",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "1"
								},
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/mahasiswa/:id_tema/:id_halaman/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"mahasiswa",
								":id_tema",
								":id_halaman",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "2"
								},
								{
									"key": "id_mahasiswa",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LAPORAN",
			"item": [
				{
					"name": "LIST LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LAPORAN KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/:id_laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								":id_laporan"
							],
							"variable": [
								{
									"key": "id_laporan",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/:id_laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								":id_laporan"
							],
							"variable": [
								{
									"key": "id_laporan",
									"value": "6"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REPORTASE",
			"item": [
				{
					"name": "LIST REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KORWIL",
			"item": [
				{
					"name": "LIST KORWIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KORWIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/korwil/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FAKULTAS",
			"item": [
				{
					"name": "LIST FAKULTAS",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/fakultas",
							"host": [
								"{{url}}"
							],
							"path": [
								"fakultas"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NILAI",
			"item": [
				{
					"name": "LIST NILAI KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET NILAI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/:id_nilai",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								":id_nilai"
							],
							"variable": [
								{
									"key": "id_nilai",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EVENT",
			"item": [
				{
					"name": "LIST ALL EVENT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"bappeda"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PENGUMUMAN",
			"item": [
				{
					"name": "LIST ALL PENGUMUMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"bappeda"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SKENARIO 1",
			"item": [
				{
					"name": "LOGIN SUPERADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"admin a\",\r\n    \"nip\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/superadmin/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"superadmin",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim I 2023\",\r\n    \"periode\": \"2022/2023\",\r\n    \"jenis\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG 1 DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 1,\r\n    \"nama\": \"Gelombang 1 Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG 1 MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 2,\r\n    \"nama\": \"Gelombang 1 Mahasiswa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN DOSEN PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN MAHASISWA DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG 1 DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG 1 MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\" : \"Bpd Boyolali\",\r\n    \"nb\" : \"bpd boyolali\",\r\n    \"nama_kabupaten\": \"Boyolali\",\r\n    \"nama_pj\": \"Admin A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/bappeda/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Dosen C\",\r\n    \"nip\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/dosen/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Yudha Pranata\",\r\n    \"nim\": \"12030119120054\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer C\",\r\n    \"nip\": \"reviewer c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/reviewer/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil C\",\r\n    \"nk\": \"korwil c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/korwil/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN BAPPEDA WONOGIRI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bpd wonogiri\",\r\n    \"password\": \"bpd wonogiri\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN WONOGIRI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kabupaten"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN GIRITONTRO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Giritontro\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Tlogoharjo\"\r\n        },\r\n        {\r\n            \"nama\": \"Tlogosari\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN GIRIWOYO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Giriwoyo\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Giriwoyo\"\r\n        },\r\n        {\r\n            \"nama\": \"Girikikis\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN BAPPEDA BATANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bpd batang\",\r\n    \"password\": \"bpd batang\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN BATANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kabupaten"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN BANDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 2,\r\n    \"nama\": \"Bandar\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Bandar\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN GIRITONTRO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN GIRIWOYO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN BANDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen a\",\r\n    \"password\": \"dosen a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen b\",\r\n    \"password\": \"dosen b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen c\",\r\n    \"password\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "3",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"reviewer a\",\r\n    \"password\": \"reviewer a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 1,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 2,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 3,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"24060119120030\",\r\n    \"password\": \"24060119120030\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 1,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"13040219130065\",\r\n    \"password\": \"13040219130065\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 2,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"12030119120054\",\r\n    \"password\": \"12030119120054\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 3,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen a\",\r\n    \"password\": \"dosen a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen b\",\r\n    \"password\": \"dosen b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen c\",\r\n    \"password\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EXPORT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/test/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"test",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}