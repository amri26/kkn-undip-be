{
	"info": {
		"_postman_id": "479778b7-63fb-48e9-b8b7-34a0f0b52c47",
		"name": "KKN UNDIP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18808497"
	},
	"item": [
		{
			"name": "ADMIN",
			"item": [
				{
					"name": "LIST ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/detail/:id_admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"detail",
								":id_admin"
							],
							"variable": [
								{
									"key": "id_admin",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"admin a\",\r\n    \"nip\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Admin B\",\r\n    \"nip\": \"admin bc\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/:id_admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								":id_admin"
							],
							"variable": [
								{
									"key": "id_admin",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AUTH",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});",
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>Status</th>",
									"        <th>Token</th>",
									"        <th>Expires At</th>",
									"    </tr>",
									"    ",
									"    <tr>",
									"        <td>{{response.status}}</td>",
									"        <td>{{response.data.token}}</td>",
									"        <td>{{response.data.expiresAt}}</td>",
									"    </tr>",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"0\",\r\n    \"password\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BAPPEDA",
			"item": [
				{
					"name": "LIST BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST BAPPEDA TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda/detail/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"detail",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/bappeda/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\" : \"Bpd Boyolali\",\r\n    \"nb\" : \"bpd boyolali\",\r\n    \"nama_kabupaten\": \"Boyolali\",\r\n    \"nama_pj\": \"Admin A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"BAPPEDA Semarang\",\r\n    \"nb\": \"090909\",\r\n    \"nama_kabupaten\": \"Kab. Semarang\",\r\n    \"nama_pj\": \"Bupati Semarang\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/bappeda/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_bappeda",
									"value": "12"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BERITA",
			"item": [
				{
					"name": "LIST BERITA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BERITA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/berita/detail/:id_berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita",
								"detail",
								":id_berita"
							],
							"variable": [
								{
									"key": "id_berita",
									"value": "18"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET THUMBNAIL PICTURE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/berita/thumbnail/:id_berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita",
								"thumbnail",
								":id_berita"
							],
							"variable": [
								{
									"key": "id_berita",
									"value": "18"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BERITA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "judul",
									"value": "DFADFASD",
									"type": "text"
								},
								{
									"key": "body",
									"value": "Ini body",
									"type": "text"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/18.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT BERITA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "judul",
									"value": "Ini Judul Setelah Update",
									"type": "text"
								},
								{
									"key": "body",
									"value": "ini body setelah update",
									"type": "text"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/—Pngtree—men suit with white shirt_8532336.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/berita/:id_berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita",
								":id_berita"
							],
							"variable": [
								{
									"key": "id_berita",
									"value": "18"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BERITA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/berita/:id_berita",
							"host": [
								"{{url}}"
							],
							"path": [
								"berita",
								":id_berita"
							],
							"variable": [
								{
									"key": "id_berita",
									"value": "19"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DOKUMEN",
			"item": [
				{
					"name": "GET DOKUMEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dokumen/:id_dokumen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dokumen",
								":id_dokumen"
							],
							"variable": [
								{
									"key": "id_dokumen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET EMBED LINK DOKUMEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dokumen/embed/:id_dokumen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dokumen",
								"embed",
								":id_dokumen"
							],
							"variable": [
								{
									"key": "id_dokumen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DESA",
			"item": [
				{
					"name": "LIST DESA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/desa",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST DESA KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/desa/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "36"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET DESA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/desa/detail/:id_desa",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa",
								"detail",
								":id_desa"
							],
							"variable": [
								{
									"key": "id_desa",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DESA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kecamatan\": 1,\r\n    \"nama\": \"Desa XYZ\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/desa",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT DESA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Desa XYZ\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/desa/:id_desa",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa",
								":id_desa"
							],
							"variable": [
								{
									"key": "id_desa",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE DESA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/desa/:id_desa",
							"host": [
								"{{url}}"
							],
							"path": [
								"desa",
								":id_desa"
							],
							"variable": [
								{
									"key": "id_desa",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DOSEN",
			"item": [
				{
					"name": "LIST DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST DOSEN TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST DOSEN WILAYAH",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/detail/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"detail",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Dosen C\",\r\n    \"nip\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"dosen a\",\r\n    \"nip\": \"1221\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/dosen/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "99"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_dosen",
									"value": "99"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EVENT",
			"item": [
				{
					"name": "LIST ALL EVENT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST EVENT BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET EVENT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/event/detail/:id_event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								"detail",
								":id_event"
							],
							"variable": [
								{
									"key": "id_event",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"keterangan\": \"\",\r\n    \"tgl_mulai\": \"2023-07-23T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-07-23T15:06:00.000Z\",\r\n    \"tempat\": \"Stadion Undip\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN Tim 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-07-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-07-21T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/event/:id_event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								":id_event"
							],
							"variable": [
								{
									"key": "id_event",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE EVENT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN TIm 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/event/:id_event",
							"host": [
								"{{url}}"
							],
							"path": [
								"event",
								":id_event"
							],
							"variable": [
								{
									"key": "id_event",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FAKULTAS",
			"item": [
				{
					"name": "LIST FAKULTAS",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/fakultas",
							"host": [
								"{{url}}"
							],
							"path": [
								"fakultas"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GELOMBANG",
			"item": [
				{
					"name": "LIST ALL GELOMBANG",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/halaman/:id_tema/:id_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"halaman",
								":id_tema",
								":id_halaman"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/dosen/:id_tema/:id_halaman/:id_dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"dosen",
								":id_tema",
								":id_halaman",
								":id_dosen"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "1"
								},
								{
									"key": "id_dosen",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST GELOMBANG MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/mahasiswa/:id_tema/:id_halaman/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"mahasiswa",
								":id_tema",
								":id_halaman",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "2"
								},
								{
									"key": "id_mahasiswa",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GELOMBANG",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/detail/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								"detail",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 1,\r\n    \"nama\": \"Gelombang 2 Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 2,\r\n    \"nama\": \"Gelombang 2 Dosen Edit\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"status\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE GELOMBANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HALAMAN",
			"item": [
				{
					"name": "LIST HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/detail/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								"detail",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Daftar Proposal Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-22T15:06:00.000Z\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CEK HALAMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/halaman/:id_tema/:id_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"halaman",
								":id_tema",
								":id_halaman"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_halaman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KABUPATEN",
			"item": [
				{
					"name": "LIST KABUPATEN TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kabupaten/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"kabupaten",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST KABUPATEN BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kabupaten/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"kabupaten",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST KABUPATEN BAPPEDA TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kabupaten/bappeda/tema/:id_tema/:id_bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"kabupaten",
								"bappeda",
								"tema",
								":id_tema",
								":id_bappeda"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								},
								{
									"key": "id_bappeda",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"kabupaten"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KATEGORI",
			"item": [
				{
					"name": "LIST KATEGORI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kategori",
							"host": [
								"{{url}}"
							],
							"path": [
								"kategori"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KATEGORI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kategori/detail/:id_kategori",
							"host": [
								"{{url}}"
							],
							"path": [
								"kategori",
								"detail",
								":id_kategori"
							],
							"variable": [
								{
									"key": "id_kategori",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KATEGORI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pelaksanaan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kategori",
							"host": [
								"{{url}}"
							],
							"path": [
								"kategori"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT KATEGORI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pengumuman Edited\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kategori/:id_kategori",
							"host": [
								"{{url}}"
							],
							"path": [
								"kategori",
								":id_kategori"
							],
							"variable": [
								{
									"key": "id_kategori",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KATEGORI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/kategori/:id_kategori",
							"host": [
								"{{url}}"
							],
							"path": [
								"kategori",
								":id_kategori"
							],
							"variable": [
								{
									"key": "id_kategori",
									"value": "12"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KECAMATAN",
			"item": [
				{
					"name": "LIST KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST KECAMATAN KABUPATEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan/kabupaten/:id_kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								"kabupaten",
								":id_kabupaten"
							],
							"variable": [
								{
									"key": "id_kabupaten",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan/detail/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								"detail",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KECAMATAN MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Gandrungmangu\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Gandrungmanis\"\r\n        },\r\n        {\r\n            \"nama\": \"Sidaurip\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Kecamatan 2\",\r\n    \"potensi\": \"Ini potensi baru\",\r\n    \"latitude\": -8.03622,\r\n    \"longitude\": 110.935,\r\n    \"radius\": 700\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "36"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan/dec/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								"dec",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KECAMATAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "33"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KORWIL",
			"item": [
				{
					"name": "LIST KORWIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KORWIL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/korwil/detail/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil",
								"detail",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/korwil/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil C\",\r\n    \"nk\": \"korwil c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil a\",\r\n    \"nk\": \"909012\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/korwil/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "13"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/korwil/:id_korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"korwil",
								":id_korwil"
							],
							"variable": [
								{
									"key": "id_korwil",
									"value": "13"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LAPORAN",
			"item": [
				{
					"name": "LIST LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LRK MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/lrk",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"lrk"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LPK MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/lpk",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"lpk"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST LAPORAN KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/detail/:id_laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"detail",
								":id_laporan"
							],
							"variable": [
								{
									"key": "id_laporan",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD LRK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"potensi\": \"Di Desa Tlogoharjo ada banyak pelaku UMKM. Namun, informasi terkait data UMKM Desa Tlogoharjo masih sangat susah dicari. Oleh karena itu diperlukan suatu media yang mudah diakses, yaitu website untuk menampung informasi terkait UMKM Desa Tlogoharjo. Dengan adanya website ini, diharapkan nantinya dapat meningkatkan taraf hidup masyarakat.\",\r\n    \"program\": \"Pengembangan Website E-Katalog UMKM Desa Tlogoharjo\",\r\n    \"sasaran\": \"Seluruh masyarakat Desa Tlogoharjo\",\r\n    \"metode\": \"Pertama adalah proses pembuatan website e-katalog. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"luaran\": \"1. Leaflet\\r\\n2. Modul PPT\\r\\n3. Reportase Media Berita (Elektronik)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/laporan/lrk",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"lrk"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD LPK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_laporan\": 1,\r\n    \"metode\": \"Langkah awal untuk mengembangkan website ini adalah proses Design Thinking. Semua fungsionalitas aplikasi didata dan dibuatkan diagram untuk membantu memudahkan proses kedepannya. Kemudian setelah didapatkan desain sistem yang diinginkan, selanjutnya adalah proses pengembangan aplikasi sampai jadi. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"pelaksanaan\": \"Program ini dilaksanakan pada: Hari/Tanggal : 14 Januari – 6 Februari 2023 Waktu : 08.00 – 20.00 Program “Pengembangan Website E-Katalog UMKM Desa Tlogoharjo” merupakan program kerja bertema teknologi berwujud pembuatan website untuk pendataan UMKM penduduk Desa Tlogoharjo. Dengan aplikasi ini, dapat mempermudah masyarakat untuk mengetahui ada UMKM apa saja di Desa Tlogoharjo. Keberhasilan dari program ini dapat dilihat dari kemudahan Operator Desa menggunakan website ini. Semua fitur utama dalam website ini dapat dicoba dan mendapatkan feedback yang sesuai. Output yang direncanakan adalah • Publikasi Rutin Media Sosial • Prototype produk • Reportase Media Berita\",\r\n    \"capaian\": \"Tercapai dengan tepat waktu, website sudah mempunyai fitur yang dibutuhkan namun masih belum bisa digunakan karena belum di hosting\",\r\n    \"hambatan\": \"- Pembuatan aplikasi membutuhkan waktu yang cukup - Untuk menghosting website juga membutuhkan biaya\",\r\n    \"kelanjutan\": \"Keberlanjutan program Pengembangan Website E-Katalog UMKM Desa Tlogoharjo ini dapat dilakukan oleh operator Desa Progowati yang nantinya diberi amanah untuk mengelola website E-Katalog UMKM Desa Tlogoharjo tersebut.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/laporan/lpk",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"lpk"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT LRK",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_laporan\": 5,\r\n    \"potensi\": \"Di Desa Tlogoharjo ada banyak pelaku UMKM. Namun, informasi terkait data UMKM Desa Tlogoharjo masih sangat susah dicari. Oleh karena itu diperlukan suatu media yang mudah diakses, yaitu website untuk menampung informasi terkait UMKM Desa Tlogoharjo. Dengan adanya website ini, diharapkan nantinya dapat meningkatkan taraf hidup masyarakat.\",\r\n    \"program\": \"Pengembangan Website E-Katalog UMKM Desa Tlogoharjo\",\r\n    \"sasaran\": \"Seluruh masyarakat Desa Tlogoharjo\",\r\n    \"metode\": \"Pertama adalah proses pembuatan website e-katalog. Setelah dirasa sesuai, website akan dihosting ke cloud. Jika sudah berhasil dan tidak ada masalah, maka website akan diisi data NIB yang sesuai.\",\r\n    \"luaran\": \"1. Leaflet\\r\\n2. Modul PPT\\r\\n3. Reportase Media Berita (Elektronik)\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/laporan/lrk",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"lrk"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE LAPORAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/laporan/:id_laporan",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								":id_laporan"
							],
							"variable": [
								{
									"key": "id_laporan",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE LAPORAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_laporan\": 1,\r\n    \"komentar\": \"Sudah bagus, mantul bener\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/laporan/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"laporan",
								"evaluate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MAHASISWA",
			"item": [
				{
					"name": "LIST MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA UNREGISTERED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/unregistered",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"unregistered"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA REGISTERED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/registered",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"registered"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA ACCEPTED",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/accepted",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"accepted"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA REGISTERED BY KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/registered/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"registered",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA ACCEPTED BY KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/accepted/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"accepted",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST MAHASISWA DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/detail/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"detail",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DOWNLOAD FORMAT IMPORT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/Format Impor Mahasiswa - KKN UNDIP.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mahasiswa/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Mhs A\",\r\n    \"nim\": \"mhs a\",\r\n    \"prodi\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Wahyu Purnomo Ady\",\r\n    \"nim\": \"240602\",\r\n    \"prodi\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "2639"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/mahasiswa/:id_mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								":id_mahasiswa"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "2639"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NILAI",
			"item": [
				{
					"name": "LIST NILAI KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET NILAI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/detail/:id_nilai",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"detail",
								":id_nilai"
							],
							"variable": [
								{
									"key": "id_nilai",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT NILAI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_nilai\": 1,\r\n    \"pembekalan\": 70,\r\n    \"upacara\": 70,\r\n    \"kehadiran_dilokasi\": 70,\r\n    \"lrk\": 70,\r\n    \"integritas\": 70,\r\n    \"sosial_kemasyarakatan\": 70,\r\n    \"lpk\": 70,\r\n    \"ujian_akhir\": 70,\r\n    \"tugas\": 70,\r\n    \"uts\": 70,\r\n    \"uas\": 70,\r\n    \"nilai_akhir\": 70,\r\n    \"nilai_huruf\": \"B\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/nilai",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai"
							]
						}
					},
					"response": []
				},
				{
					"name": "RESET NILAI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/reset/:id_nilai",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"reset",
								":id_nilai"
							],
							"variable": [
								{
									"key": "id_nilai",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DOWNLOAD FORMAT IMPORT FILE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/nilai/import/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"import",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT NILAI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/Format Impor Nilai Mahasiswa Kec. Wanasari, Kab. Brebes - KKN TIM I 2022-2023.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/nilai/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"nilai",
								"import"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "P2KKN KOORDINATOR",
			"item": [
				{
					"name": "LIST KOORDINATOR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/koordinator",
							"host": [
								"{{url}}"
							],
							"path": [
								"koordinator"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET KOORDINATOR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/koordinator/detail/:id_koordinator",
							"host": [
								"{{url}}"
							],
							"path": [
								"koordinator",
								"detail",
								":id_koordinator"
							],
							"variable": [
								{
									"key": "id_koordinator",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KOORDINATOR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_pimpinan\": 2,\r\n    \"id_struktur\": 1 \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/koordinator",
							"host": [
								"{{url}}"
							],
							"path": [
								"koordinator"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT KOORDINATOR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_pimpinan\": 2,\r\n    \"id_struktur\": 1 \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/koordinator/:id_koordinator",
							"host": [
								"{{url}}"
							],
							"path": [
								"koordinator",
								":id_koordinator"
							],
							"variable": [
								{
									"key": "id_koordinator",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE KOORDINATOR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/koordinator/:id_koordinator",
							"host": [
								"{{url}}"
							],
							"path": [
								"koordinator",
								":id_koordinator"
							],
							"variable": [
								{
									"key": "id_koordinator",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "P2KKN PROFILE",
			"item": [
				{
					"name": "GET PROFILE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"profile\": \"P2KKN atau Pusat Pelayanan Kuliah Kerja Nyata Universitas Diponegoro adalah sebuah lembaga di Universitas Diponegoro yang bertanggung jawab atas pelaksanaan Kuliah Kerja Nyata (KKN). KKN adalah bentuk pendidikan yang memberikan pengalaman belajar kepada mahasiswa untuk berinteraksi dengan masyarakat di luar kampus, dan secara langsung mengidentifikasikan masalah-masalah serta membantu menangani permasalahan yang dihadapi masyarakat dalam pembangunan wilayah di lokasi KKN\",\r\n    \"visi\": \"Mewujudkan program KKN yang berkualitas, inovatif, dan berdaya saing tinggi dalam rangka pengabdian kepada masyarakat\",\r\n    \"misi\": \"Meningkatkan kualitas program KKN melalui penerapan prinsip-prinsip pembangunan berkelanjutan dan pengembangan potensi daerah\",\r\n    \"alamat\": \"Gedung Pusat Pelayanan KKN (ex Lab Obat alam) Universitas Diponegoro, Tembalang, Semarang, Jawa Tengah 50275\",\r\n    \"no_hp\": \"082323230238\",\r\n    \"email\": \"p2kkn@live.undip.ac.id\",\r\n    \"facebook\": \"Pusatpelayanan Kuliahkerjanyata\",\r\n    \"instagram\": \"@p2kkn\",\r\n    \"twitter\": \"@p2kknundip\",\r\n    \"youtube\": \"p2kkn undip\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "P2KKN STRUKTUR",
			"item": [
				{
					"name": "GET STRUKTUR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/struktur",
							"host": [
								"{{url}}"
							],
							"path": [
								"struktur"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT STRUKTUR",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kepala\": 1,\r\n    \"id_sekretaris\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/struktur",
							"host": [
								"{{url}}"
							],
							"path": [
								"struktur"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PENDAFTARAN",
			"item": [
				{
					"name": "ADD PENDAFTARAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 1,\r\n    \"id_gelombang\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pendaftaran",
							"host": [
								"{{url}}"
							],
							"path": [
								"pendaftaran"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PENDAFTARAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/pendaftaran/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pendaftaran",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC PENDAFTARAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/pendaftaran/dec/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pendaftaran",
								"dec",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PENDAFTARAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/pendaftaran/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pendaftaran",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "8"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PENGUMUMAN",
			"item": [
				{
					"name": "LIST ALL PENGUMUMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PENGUMUMAN BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PENGUMUMAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pengumuman/detail/:id_pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								"detail",
								":id_pengumuman"
							],
							"variable": [
								{
									"key": "id_pengumuman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"isi\": \"Upcara dilaksanakan pada bulan juli\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Upacara KKN Tim 1 2023\",\r\n    \"isi\": \"Upcara dilaksanakan pada bulan Juli dan Agustus\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pengumuman/:id_pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								":id_pengumuman"
							],
							"variable": [
								{
									"key": "id_pengumuman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PENGUMUMAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"judul\": \"Pembekalan KKN TIm 1 2023\",\r\n    \"keterangan\": \"Edit\",\r\n    \"tgl_mulai\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-06-20T15:06:00.000Z\",\r\n    \"tempat\": \"Fakultas Hukum\",\r\n    \"peruntukan\": \"MAHASISWA, DOSEN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pengumuman/:id_pengumuman",
							"host": [
								"{{url}}"
							],
							"path": [
								"pengumuman",
								":id_pengumuman"
							],
							"variable": [
								{
									"key": "id_pengumuman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIMPINAN",
			"item": [
				{
					"name": "LIST PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pimpinan/detail/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan",
								"detail",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/Format Import Pimpinan - KKN UNDIP.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/pimpinan/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PIMIPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pimpinan A\",\r\n    \"nip\": \"pimpinan a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Pimpinan AC\",\r\n    \"nip\": \"7879\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pimpinan/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PIMPINAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/pimpinan/:id_pimpinan",
							"host": [
								"{{url}}"
							],
							"path": [
								"pimpinan",
								":id_pimpinan"
							],
							"variable": [
								{
									"key": "id_pimpinan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PRESENSI",
			"item": [
				{
					"name": "LIST ALL JADWAL PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/jadwal",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST JADWAL PRESENSI TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/jadwal/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PRESENSI MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PRESENSI KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "32"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/detail/:id_mahasiswa/:tgl",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"detail",
								":id_mahasiswa",
								":tgl"
							],
							"variable": [
								{
									"key": "id_mahasiswa",
									"value": "619"
								},
								{
									"key": "tgl",
									"value": "2023-09-30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD JADWAL PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"tgl\": \"2023-10-06T15:06:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/presensi/jadwal",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_mahasiswa\": 1,\r\n    \"id_presensi\": 4,\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/presensi",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi"
							]
						}
					},
					"response": []
				},
				{
					"name": "SETUP JADWAL PRESENSI TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/jadwal/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SUBMIT PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tgl\": \"2023-10-02T15:06:00.000Z\",\r\n    \"status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/presensi/submit/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"submit",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT JADWAL PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tgl\": \"2023-10-06T15:06:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/presensi/jadwal/:id_presensi",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal",
								":id_presensi"
							],
							"variable": [
								{
									"key": "id_presensi",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": -1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/presensi/:id_riwayat_presensi",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								":id_riwayat_presensi"
							],
							"variable": [
								{
									"key": "id_riwayat_presensi",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE STATUS JADWAL PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/jadwal/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/:id_riwayat_presensi",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								":id_riwayat_presensi"
							],
							"variable": [
								{
									"key": "id_riwayat_presensi",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE JADWAL PRESENSI",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/presensi/jadwal/:id_presensi",
							"host": [
								"{{url}}"
							],
							"path": [
								"presensi",
								"jadwal",
								":id_presensi"
							],
							"variable": [
								{
									"key": "id_presensi",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PROPOSAL",
			"item": [
				{
					"name": "LIST PROPOSAL TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PROPOSAL DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST PROPOSAL DOSEN TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/dosen/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"dosen",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PROPOSAL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/detail/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"detail",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_tema",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/proposal/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DEC PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/proposal/dec/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"dec",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 1,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/proposal/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"proposal",
								"evaluate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "QR",
			"item": [
				{
					"name": "GENERATE QR",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.qrserver.com/v1/create-qr-code/?data=HelloWorld!&size=200x200",
							"protocol": "http",
							"host": [
								"api",
								"qrserver",
								"com"
							],
							"path": [
								"v1",
								"create-qr-code",
								""
							],
							"query": [
								{
									"key": "data",
									"value": "HelloWorld!"
								},
								{
									"key": "size",
									"value": "200x200"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REPORTASE",
			"item": [
				{
					"name": "LIST REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/dosen/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"dosen",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST REPORTASE KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/kecamatan/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"kecamatan",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/detail/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"detail",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"judul\": \"Judul Reportase\",\r\n    \"isi\": \"Isi berita\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"judul\": \"Kebudayaan Petani dan Peternak Desa ABCD\",\r\n    \"isi\": \"Isi Desa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reportase/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE REPORTASE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/reportase/:id_reportase",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								":id_reportase"
							],
							"variable": [
								{
									"key": "id_reportase",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE REPORTASE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_reportase\": 1,\r\n    \"komentar\": \"Kurang mantul apa yah\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reportase/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reportase",
								"evaluate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REVIEWER",
			"item": [
				{
					"name": "LIST REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/reviewer/detail/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"detail",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "IMPORT REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/reviewer/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer C\",\r\n    \"nip\": \"reviewer c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer A\",\r\n    \"nip\": \"1331\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/reviewer/:id_reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								":id_reviewer"
							],
							"variable": [
								{
									"key": "id_reviewer",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SUPERADMIN",
			"item": []
		},
		{
			"name": "TEMA",
			"item": [
				{
					"name": "LIST TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST TEMA ACTIVE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/active",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST TEMA DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/detail/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								"detail",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim II 2023\",\r\n    \"periode\": \"2023/2024\",\r\n    \"jenis\": 1,\r\n    \"kab\": \"\",\r\n    \"kec\": \"\",\r\n    \"desa\": \"\",\r\n    \"tgl_mulai\": \"2023-10-23T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-10-25T15:06:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim I00 2023\",\r\n    \"periode\": \"2022/2023\",\r\n    \"kab\": \"\",\r\n    \"kec\": \"\",\r\n    \"desa\": \"\",\r\n    \"tgl_mulai\": \"2023-10-23T15:06:00.000Z\",\r\n    \"tgl_akhir\": \"2023-10-25T15:06:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "LIST USER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET USER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/detail",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE ADMIN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE MAHASISWA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\",\r\n    \"riwayat_penyakit\": \"Tidak ada\",\r\n    \"nama_ortu\": \"Rudiger\",\r\n    \"no_hp_ortu\": \"09832565\",\r\n    \"alamat_ortu\": \"Jalan Kenanga\",\r\n    \"nama_cp_urgent\": \"Ibu Kos\",\r\n    \"no_hp_cp_urgent\": \"93797324\",\r\n    \"alamat_cp_urgent\": \"Jalan Banyubiru\",\r\n    \"hubungan\": \"Ibu kos\",\r\n    \"nama_kabupaten\": \"Kab. Merangin\",\r\n    \"nama_pj\": \"PJ Merangin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE DOSEN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE BAPPEDA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\",\r\n    \"nama_kabupaten\": \"Kab. Merangin\",\r\n    \"nama_pj\": \"PJ Merangin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE PIMPINAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "EDIT PROFILE REVIEWER",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Ini nama setelah diedit\",\r\n    \"jenis_kelamin\": 1,\r\n    \"ttl\": \"2023-07-05T07:22:28.000Z\",\r\n    \"no_hp\": \"084924589\",\r\n    \"alamat\": \"Jalan Kuningan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WILAYAH",
			"item": []
		},
		{
			"name": "SKENARIO 1",
			"item": [
				{
					"name": "LOGIN SUPERADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"admin a\",\r\n    \"nip\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/superadmin/admin",
							"host": [
								"{{url}}"
							],
							"path": [
								"superadmin",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Tim I 2023\",\r\n    \"periode\": \"2022/2023\",\r\n    \"jenis\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG 1 DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 1,\r\n    \"nama\": \"Gelombang 1 Dosen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD GELOMBANG 1 MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema_halaman\": 2,\r\n    \"nama\": \"Gelombang 1 Mahasiswa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang"
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH TEMA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/tema/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"tema",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN DOSEN PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH HALAMAN MAHASISWA DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/halaman/:id_tema_halaman",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"halaman",
								":id_tema_halaman"
							],
							"variable": [
								{
									"key": "id_tema_halaman",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG 1 DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SWITCH GELOMBANG 1 MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/gelombang/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"gelombang",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_gelombang",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/bappeda",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD BAPPEDA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\" : \"Bpd Boyolali\",\r\n    \"nb\" : \"bpd boyolali\",\r\n    \"nama_kabupaten\": \"Boyolali\",\r\n    \"nama_pj\": \"Admin A\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/bappeda/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"bappeda",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/dosen",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD DOSEN SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Dosen C\",\r\n    \"nip\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/dosen/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"dosen",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD MAHASISWA SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Yudha Pranata\",\r\n    \"nim\": \"12030119120054\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/mahasiswa/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"mahasiswa",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/reviewer",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD REVIEWER SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Reviewer C\",\r\n    \"nip\": \"reviewer c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/reviewer/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"reviewer",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/test.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/admin/korwil",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KORWIL SINGLE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nama\": \"Korwil C\",\r\n    \"nk\": \"korwil c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/korwil/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"korwil",
								"single"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN BAPPEDA WONOGIRI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bpd wonogiri\",\r\n    \"password\": \"bpd wonogiri\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN WONOGIRI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kabupaten"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN GIRITONTRO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Giritontro\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Tlogoharjo\"\r\n        },\r\n        {\r\n            \"nama\": \"Tlogosari\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN GIRIWOYO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 1,\r\n    \"nama\": \"Giriwoyo\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Giriwoyo\"\r\n        },\r\n        {\r\n            \"nama\": \"Girikikis\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN BAPPEDA BATANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"bpd batang\",\r\n    \"password\": \"bpd batang\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KABUPATEN BATANG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kabupaten",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kabupaten"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD KECAMATAN BANDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_kabupaten\": 2,\r\n    \"nama\": \"Bandar\",\r\n    \"potensi\": \"Banyak UMKM di sekitar lapangan\",\r\n    \"desa\": [\r\n        {\r\n            \"nama\": \"Bandar\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/bappeda/kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"bappeda",
								"kecamatan"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN GIRITONTRO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN GIRIWOYO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC KECAMATAN BANDAR",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_korwil\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/kecamatan/acc/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"kecamatan",
								"acc",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen a\",\r\n    \"password\": \"dosen a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen b\",\r\n    \"password\": \"dosen b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "1",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen c\",\r\n    \"password\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD PROPOSAL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/ACER NITRO/Desktop/transkrip.pdf"
								},
								{
									"key": "id_kecamatan",
									"value": "3",
									"type": "default"
								},
								{
									"key": "id_gelombang",
									"value": "1",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/dosen/proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"proposal"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN REVIEWER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"reviewer a\",\r\n    \"password\": \"reviewer a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 1,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 2,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "EVALUATE PROPOSAL C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_proposal\": 3,\r\n    \"komentar\": \"Waw amazing!\",\r\n    \"rekomendasi\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/reviewer/evaluate",
							"host": [
								"{{url}}"
							],
							"path": [
								"reviewer",
								"evaluate"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin a\",\r\n    \"password\": \"admin a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC PROPOSAL C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/proposal/acc/:id_proposal",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"proposal",
								"acc",
								":id_proposal"
							],
							"variable": [
								{
									"key": "id_proposal",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"24060119120030\",\r\n    \"password\": \"24060119120030\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 1,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"13040219130065\",\r\n    \"password\": \"13040219130065\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 2,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"12030119120054\",\r\n    \"password\": \"12030119120054\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "DAFTAR LOKASI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id_tema\": 1,\r\n    \"id_kecamatan\": 3,\r\n    \"id_gelombang\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/mahasiswa/daftar_lokasi",
							"host": [
								"{{url}}"
							],
							"path": [
								"mahasiswa",
								"daftar_lokasi"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen a\",\r\n    \"password\": \"dosen a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen b\",\r\n    \"password\": \"dosen b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN DOSEN C",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 201', () => {\r",
									"   pm.response.to.have.status(201);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.includes('application/json');\r",
									"}); \r",
									" \r",
									"pm.test('response body should have correct property and value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.ownProperty('status');\r",
									"    pm.expect(responseJson).to.ownProperty('data');\r",
									"\r",
									"    pm.expect(responseJson.status).to.equals(true);\r",
									"    pm.expect(responseJson.data).to.be.an('object');\r",
									"});\r",
									" \r",
									"pm.test('response body data should have property with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('token');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									"    pm.expect(data).to.have.ownProperty('expiresAt');\r",
									"    pm.expect(data.refreshToken).to.not.equals('');\r",
									"    pm.expect(data.refreshToken).to.not.equals(null);\r",
									"\r",
									"    pm.environment.set('token', data.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"dosen c\",\r\n    \"password\": \"dosen c\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "ACC MAHASISWA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should be 204', () => {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/dosen/mahasiswa/acc/:id_mahasiswa_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"dosen",
								"mahasiswa",
								"acc",
								":id_mahasiswa_kecamatan"
							],
							"variable": [
								{
									"key": "id_mahasiswa_kecamatan",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "EXPORT",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/test/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"test",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "INSERT DATA",
			"item": [
				{
					"name": "INSERT DATA TIM 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Wahyu Purnomo Ady/Downloads/Compressed/Data KKN TIM 1 Ready Input/Klaten/Kab. Klaten - Kec. Tulung.xlsx"
								}
							]
						},
						"url": {
							"raw": "{{url}}/test/mhs/:id_kecamatan/:id_gelombang",
							"host": [
								"{{url}}"
							],
							"path": [
								"test",
								"mhs",
								":id_kecamatan",
								":id_gelombang"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "21"
								},
								{
									"key": "id_gelombang",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EXCEL",
			"item": [
				{
					"name": "PENDAFTARAN MHS KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/excel/pendaftaran/mahasiswa/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"excel",
								"pendaftaran",
								"mahasiswa",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PENDAFTARAN DOSEN TEMA",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/excel/pendaftaran/dosen/:id_tema",
							"host": [
								"{{url}}"
							],
							"path": [
								"excel",
								"pendaftaran",
								"dosen",
								":id_tema"
							],
							"variable": [
								{
									"key": "id_tema",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "NILAI KECAMATAN",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/excel/nilai/:id_kecamatan",
							"host": [
								"{{url}}"
							],
							"path": [
								"excel",
								"nilai",
								":id_kecamatan"
							],
							"variable": [
								{
									"key": "id_kecamatan",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}